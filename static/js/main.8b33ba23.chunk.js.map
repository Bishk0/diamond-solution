{"version":3,"sources":["api/api.js","components/MovieCard/MovieCard.jsx","components/MovieInfo/MovieInfo.jsx","types/types.js","components/MoviesList/MoviesList.jsx","components/SearchMovie/SearchMovie.jsx","App.jsx","index.js"],"names":["API_URL","API_KEY","getPopularMovies","a","fetch","response","json","result","getMovieById","id","searchMovies","query","MovieCard","title","poster_path","vote_average","imageURL","className","src","alt","data-id","onClick","event","target","dataset","MovieInfo","PropTypes","shape","adult","bool","backdrop_path","string","genre_ids","array","number","original_language","original_title","overview","popularity","release_date","video","vote_count","belongs_to_collection","object","budget","genres","homepage","imdb_id","production_companies","production_countries","revenue","runtime","spoken_languages","status","tagline","movie","map","genre","name","join","MoviesList","state","selectedMovie","then","setState","window","scrollTo","movies","this","props","key","Component","SearchMovie","search","getMovies","results","submitHandler","preventDefault","onSubmit","type","value","onChange","placeholder","disabled","length","App","to","pathname","path","render","component","from","style","textAlign","color","ReactDOM","StrictMode","document","getElementById"],"mappings":"wYAAMA,EAAU,gCACVC,EAAU,2CAEHC,EAAgB,uCAAG,8BAAAC,EAAA,sEACPC,MAAM,GAAD,OAAIJ,EAAJ,yBAA4BC,IAD1B,cACxBI,EADwB,gBAETA,EAASC,OAFA,cAExBC,EAFwB,yBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAY,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,sEACHC,MAAM,GAAD,OAAIJ,EAAJ,iBAAoBS,EAApB,YAA0BR,IAD5B,cACpBI,EADoB,gBAELA,EAASC,OAFJ,cAEpBC,EAFoB,yBAInBA,GAJmB,2CAAH,sDAOZG,EAAY,uCAAG,WAAMC,GAAN,iBAAAR,EAAA,sEACHC,MAAM,GAAD,OAAIJ,EAAJ,wBAA2BC,EAA3B,kBAA4CU,IAD9C,cACpBN,EADoB,gBAELA,EAASC,OAFJ,cAEpBC,EAFoB,yBAInBA,GAJmB,2CAAH,sD,uBCbZK,G,YAAY,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,aAAcN,EAAsB,EAAtBA,GAAID,EAAkB,EAAlBA,aAC1DQ,EAAQ,yCAAqCF,GAGnD,OACE,yBAAKG,UAAU,QACb,yBAAKA,UAAU,cACb,yBACEA,UAAU,MACVC,IAAKJ,EAAcE,EAPT,8BAQVG,IAAG,UAAKN,EAAL,WACHO,UAASX,EACTY,QAAS,SAACC,GAAD,OAAWd,EAAac,EAAMC,OAAOC,QAAQf,OAExD,yBAAKQ,UAAU,gBACb,yBACEA,UAAU,OACVC,IAAI,wBACJC,IAAI,qBAEN,8BAAOJ,Q,gBCpBJU,GCFcC,IAAUC,MAAM,CACvCC,MAAOF,IAAUG,KACjBC,cAAeJ,IAAUK,OACzBC,UAAWN,IAAUO,MACrBxB,GAAIiB,IAAUQ,OACdC,kBAAmBT,IAAUK,OAC7BK,eAAgBV,IAAUK,OAC1BM,SAAUX,IAAUK,OACpBO,WAAYZ,IAAUQ,OACtBpB,YAAaY,IAAUK,OACvBQ,aAAcb,IAAUK,OACxBlB,MAAOa,IAAUK,OACjBS,MAAOd,IAAUG,KACjBd,aAAcW,IAAUQ,OACxBO,WAAYf,IAAUQ,SAGCR,IAAUC,MAAM,CACvCC,MAAOF,IAAUG,KACjBC,cAAeJ,IAAUK,OACzBW,sBAAuBhB,IAAUiB,OACjCC,OAAQlB,IAAUQ,OAClBW,OAAQnB,IAAUO,MAClBa,SAAUpB,IAAUK,OACpBtB,GAAIiB,IAAUQ,OACda,QAASrB,IAAUK,OACnBI,kBAAmBT,IAAUK,OAC7BK,eAAgBV,IAAUK,OAC1BM,SAAUX,IAAUK,OACpBO,WAAYZ,IAAUQ,OACtBpB,YAAaY,IAAUK,OACvBiB,qBAAsBtB,IAAUO,MAChCgB,qBAAsBvB,IAAUO,MAChCM,aAAcb,IAAUK,OACxBmB,QAASxB,IAAUQ,OACnBiB,QAASzB,IAAUQ,OACnBkB,iBAAkB1B,IAAUO,MAC5BoB,OAAQ3B,IAAUK,OAClBuB,QAAS5B,IAAUK,OACnBlB,MAAOa,IAAUK,OACjBS,MAAOd,IAAUG,KACjBd,aAAcW,IAAUQ,OACxBO,WAAYf,IAAUQ,S,MDxCD,SAAC,GAAe,IAAbqB,EAAY,EAAZA,MACpBvC,EAAQ,yCAAqCuC,EAAMzC,aAEnD+B,EAASU,EAAMV,OAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,MAE1D,OACE,yBAAK1C,UAAU,kBACb,yBACEA,UAAU,MACVC,IAAKqC,EAAMzC,YAAcE,EAPb,8BAQVG,IAAG,UAAKoC,EAAM1C,MAAX,aACP,yBAAKI,UAAU,QACb,4BAAKsC,EAAM1C,OACX,2BAAI0C,EAAMlB,UACV,2BAAG,sCAAH,IAAmBQ,GACnB,2BACE,wCAEEU,EAAMN,qBAAqB,GACvBM,EAAMN,qBAAqB,GAAGS,KAC9B,kBAGR,2BACE,yCAEEH,EAAMH,iBAAiB,GACnBG,EAAMH,iBAAiB,GAAGM,KAC1B,kBAGR,2BAAG,uCAAH,IAAoBH,EAAMJ,QAA1B,YACA,2BAAG,4CAAH,IAAyBI,EAAMhB,cAC/B,2BAAG,sCAAH,IAAmBgB,EAAMX,OAAzB,KACA,2BAAG,uCAAH,IAAoBW,EAAML,QAA1B,SE7BKU,EAAb,4MAEEC,MAAQ,CACNC,cAAe,MAHnB,EAUEtD,aAAe,SAACC,GACdD,EAAaC,GACVsD,MAAK,SAAAR,GAAK,OAAI,EAAKS,SAAS,CAAEF,cAAeP,QAZpD,wDAME,WACEU,OAAOC,SAAS,EAAG,KAPvB,oBAeE,WAAU,IAAD,OACCC,EAAWC,KAAKC,MAAhBF,OACR,OACE,yBAAKlD,UAAU,UAEXmD,KAAKP,MAAMC,cACP,kBAAC,EAAD,CAAWP,MAAOa,KAAKP,MAAMC,gBAC7B,KAELK,EAAOX,KAAI,SAAAD,GAAK,OACb,kBAAC,EAAD,eACEe,IAAKf,EAAM9C,IACP8C,EAFN,CAGE/C,aAAc,EAAKA,wBA5BjC,GAAgC+D,aCHnBC,G,MAAb,4MACEX,MAAQ,CACNY,OAAQ,GACRN,OAAQ,GACRL,cAAe,MAJnB,EAWEY,UAAY,WACN,EAAKb,MAAMY,QACb/D,EAAa,EAAKmD,MAAMY,QACvBV,MAAK,SAAAI,GAAM,OAAI,EAAKH,SAAS,CAAEG,OAAQA,EAAOQ,cAdrD,EAkBEnE,aAAe,SAACC,GACdD,EAAaC,GACVsD,MAAK,SAAAR,GAAK,OAAI,EAAKS,SAAS,CAAEF,cAAeP,QApBpD,EAuBEqB,cAAgB,SAACtD,GACfA,EAAMuD,iBACN,EAAKH,YACL,EAAKV,SAAS,CAACS,OAAQ,GAAIX,cAAe,QA1B9C,wDAOE,WACEG,OAAOC,SAAS,EAAG,KARvB,oBA6BE,WAAU,IAAD,OACP,OACE,oCACE,0BAAMjD,UAAU,SAAS6D,SAAUV,KAAKQ,eACtC,2BACEG,KAAK,OACLC,MAAOZ,KAAKP,MAAMY,OAClBQ,SAAU,SAAA3D,GAAK,OAAI,EAAK0C,SAAS,CAACS,OAAQnD,EAAMC,OAAOyD,SACvDE,YAAY,kBAEd,4BACEH,KAAK,SACLI,UAAWf,KAAKP,MAAMY,QAFxB,WAQAL,KAAKP,MAAMM,OAAOiB,OACd,kBAAC,EAAD,CACEjB,OAAQC,KAAKP,MAAMM,OACnB3D,aAAc4D,KAAK5D,eAErB,wBAAIS,UAAU,SAAd,qCAGJmD,KAAKC,MAAMP,cACP,kBAAC,EAAD,CAAWP,MAAOa,KAAKP,MAAMC,gBAC7B,UAzDd,GAAiCS,cCsClBc,E,4MApCbxB,MAAQ,CACNM,OAAQ,I,uDAGV,WAAqB,IAAD,OAClBjE,IAAmB6D,MAAK,SAAAI,GAAM,OAAI,EAAKH,SAAS,CAAEG,OAAQA,EAAOQ,e,oBAGnE,WAAU,IAAD,OACP,OACE,yBAAK1D,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAASqE,GAAI,CAACC,SAAU,8BAAxB,WACA,kBAAC,IAAD,CAASD,GAAI,CAACC,SAAU,6BAAxB,WAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,4BACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAYtB,OAAQ,EAAKN,MAAMM,YAE/C,kBAAC,IAAD,CAAOqB,KAAK,2BAA2BE,UAAWlB,IAClD,kBAAC,IAAD,CAAUmB,KAAM,qBAAsBL,GAAI,8BAC1C,kBAAC,IAAD,CACEG,OAAQ,kBACN,wBAAIG,MAAO,CAACC,UAAW,SAAUC,MAAO,cAAxC,qC,GAzBIvB,aCDlBwB,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.8b33ba23.chunk.js","sourcesContent":["const API_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = 'api_key=66568aed5bb1659219c997907013c53b';\n\nexport const getPopularMovies = async() => {\n  const response = await fetch(`${API_URL}movie/popular?${API_KEY}`);\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getMovieById = async(id) => {\n  const response = await fetch(`${API_URL}movie/${id}?${API_KEY}`);\n  const result = await response.json();\n\n  return result;\n};\n\nexport const searchMovies = async(query) => {\n  const response = await fetch(`${API_URL}search/movie?${API_KEY}&query=${query}`);\n  const result = await response.json();\n\n  return result;\n}\n\n// &language=en-US&query=${query}&page=1&include_adult=false&840","import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ title, poster_path, vote_average, id, getMovieById}) => {\n  const imageURL = `https://image.tmdb.org/t/p/w780${poster_path}`;\n  const altPoster = './img/posterplaceholder.jpg';\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <img\n          className=\"img\"\n          src={poster_path ? imageURL : altPoster}\n          alt={`${title} poster`}\n          data-id={id}\n          onClick={(event) => getMovieById(event.target.dataset.id)}\n        />\n        <div className=\"vote_average\">\n          <img\n            className=\"star\"\n            src=\"./img/star-active.svg\"\n            alt=\"golden star icon\"\n          />\n          <span>{vote_average}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  getMovieById: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { movieInfo } from '../../types/types';\nimport './MovieInfo.scss';\n\nexport const MovieInfo = ({ movie }) => {\n  const imageURL = `https://image.tmdb.org/t/p/w780${movie.poster_path}`;\n  const altPoster = './img/posterplaceholder.jpg';\n  const genres = movie.genres.map(genre => genre.name).join(', ');\n  \n  return (\n    <div className=\"info-container\">\n      <img \n        className=\"img\"\n        src={movie.poster_path ? imageURL : altPoster}\n          alt={`${movie.title} poster`} />\n      <div className=\"text\">\n        <h1>{movie.title}</h1>\n        <p>{movie.overview}</p>\n        <p><b>Genres:</b> {genres}</p>\n        <p>\n          <b>Country: </b>\n          {\n            movie.production_countries[0]\n              ? movie.production_countries[0].name\n              : 'No information'\n          }\n        </p>\n        <p>\n          <b>Language: </b>\n          {\n            movie.spoken_languages[0]\n              ? movie.spoken_languages[0].name\n              : 'No information'\n          }\n        </p>\n        <p><b>Runtime:</b> {movie.runtime} minutes</p>\n        <p><b>Release date:</b> {movie.release_date}</p>\n        <p><b>Budget:</b> {movie.budget}$</p>\n        <p><b>Revenue:</b> {movie.revenue}$</p>\n      </div>\n    </div>\n  );\n}\n\nMovieInfo.propTypes = {\n  movie: movieInfo,\n};\n","import PropTypes from 'prop-types';\n\nexport const moviesTypes = PropTypes.shape({\n    adult: PropTypes.bool,\n    backdrop_path: PropTypes.string,\n    genre_ids: PropTypes.array,\n    id: PropTypes.number,\n    original_language: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string,\n    video: PropTypes.bool,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  });\n\n  export const movieInfo = PropTypes.shape({\n    adult: PropTypes.bool,\n    backdrop_path: PropTypes.string,\n    belongs_to_collection: PropTypes.object,\n    budget: PropTypes.number,\n    genres: PropTypes.array,\n    homepage: PropTypes.string,\n    id: PropTypes.number,\n    imdb_id: PropTypes.string,\n    original_language: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    production_companies: PropTypes.array,\n    production_countries: PropTypes.array,\n    release_date: PropTypes.string,\n    revenue: PropTypes.number,\n    runtime: PropTypes.number,\n    spoken_languages: PropTypes.array,\n    status: PropTypes.string,\n    tagline: PropTypes.string,\n    title: PropTypes.string,\n    video: PropTypes.bool,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  });","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { moviesTypes } from '../../types/types';\nimport { MovieInfo } from '../MovieInfo/MovieInfo';\nimport { getMovieById } from '../../api/api';\n\nexport class MoviesList extends Component {\n\n  state = {\n    selectedMovie: null,\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0)\n  }\n\n  getMovieById = (id) => {\n    getMovieById(id)\n      .then(movie => this.setState({ selectedMovie: movie }));\n  }\n\n  render() {\n    const { movies } = this.props;\n    return (\n      <div className=\"movies\">\n        {\n          this.state.selectedMovie\n            ? <MovieInfo movie={this.state.selectedMovie} />\n            : null\n        }\n        {movies.map(movie => (\n            <MovieCard\n              key={movie.id}\n              {...movie}\n              getMovieById={this.getMovieById}\n            />\n        ))}\n      </div>\n    );\n  }\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(moviesTypes),\n};\n","import React, { Component } from 'react';\nimport { getMovieById, searchMovies } from '../../api/api';\nimport { MovieInfo } from '../MovieInfo/MovieInfo';\nimport { MoviesList } from '../MoviesList/MoviesList';\nimport './SearchMovie.scss';\n\nexport class SearchMovie extends Component {\n  state = {\n    search: '',\n    movies: [],\n    selectedMovie: null,\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  getMovies = () => {\n    if (this.state.search) {\n      searchMovies(this.state.search)\n      .then(movies => this.setState({ movies: movies.results }));\n    }\n  }\n\n  getMovieById = (id) => {\n    getMovieById(id)\n      .then(movie => this.setState({ selectedMovie: movie }));\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.getMovies()\n    this.setState({search: '', selectedMovie: null});\n  }\n\n  render() {\n    return (\n      <>\n        <form className=\"search\" onSubmit={this.submitHandler}>\n          <input\n            type=\"text\"\n            value={this.state.search}\n            onChange={event => this.setState({search: event.target.value})}\n            placeholder=\"Search movies\"\n          />\n          <button\n            type=\"submit\"\n            disabled={!this.state.search}\n          >\n            Search\n          </button>\n        </form>\n        {\n          this.state.movies.length\n            ? <MoviesList\n                movies={this.state.movies}\n                getMovieById={this.getMovieById}\n              />\n            : <h2 className=\"title\">No movies found, please try again</h2>\n        }\n        {\n          this.props.selectedMovie\n            ? <MovieInfo movie={this.state.selectedMovie} />\n            : null\n        }\n      \n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { getPopularMovies } from './api/api';\nimport './App.scss';\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom';\nimport { MoviesList } from './components/MoviesList/MoviesList';\nimport { SearchMovie } from './components/SearchMovie/SearchMovie';\n\nclass App extends Component {\n  state = {\n    movies: [],\n  }\n\n  componentDidMount() {\n    getPopularMovies().then(movies => this.setState({ movies: movies.results }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"nav\">\n          <NavLink to={{pathname: \"/diamond-solution/popular\"}}>Popular</NavLink>\n          <NavLink to={{pathname: \"/diamond-solution/search\"}}>Search</NavLink>\n        </nav>\n        <Switch>\n          <Route\n            path=\"/diamond-solution/popular\"\n            render={() => <MoviesList movies={this.state.movies} />}\n          />\n          <Route path=\"/diamond-solution/search\" component={SearchMovie} />\n          <Redirect from={'/diamond-solution/'} to={'/diamond-solution/popular'} />\n          <Route\n            render={() =>\n              <h1 style={{textAlign: 'center', color: 'indianred'}}>\n                Error 404 page not found\n              </h1>\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}